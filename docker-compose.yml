version: '3'
services:
  eosio-cdt:
    image: eostudio/eosio.cdt:v1.7.0
    container_name: 'eosio-cdt'
    volumes:
      - ./:/var/repo
  # eosio:
  #   build:
  #     context: ./blockchain
  #     dockerfile: Dockerfile-eosio
  #   container_name: "eosio"
  #   ports:
  #     - 8888:8888
  #   volumes:
  #     - ./:/var/repo
  #     - ./temp/eosio:/data
  dfuse:
    build:
      context: ./blockchain
      dockerfile: Dockerfile-dfuse
    container_name: "dfuse"
    ports:
      - 8080:8080
      - 8081:8081
      - 8888:8888
    volumes:
      - ./:/var/repo
      - ./temp/dfuse:/data
    command: ["dfuseeos", "start", "--data-dir", "/data"]
  mongo:
    image: mongo:latest
    container_name: 'mongodb'
    ports:
      - 27017:27017
    environment:
      - MONGO_DATA_DIR=/data
      - MONGO_LOG_DIR=/data-logs
      - MONGODB_USER="user"
      - MONGODB_PASS="pass"
    volumes:
      - ./temp/mongo/db:/data/db
      - ./temp/mongo/configdb:/data/configdb
      - ./temp/mongo/logs:/data-logs
  back-end:
    build:
      context: ./back-end
      dockerfile: Dockerfile-nodemon
    container_name: 'back-end'
    ports:
      - 4000:4000
    volumes:
      - ./:/var/repo
      - ./temp/back-end:/data
    working_dir: /var/repo/back-end
    command: sh -c 'npm run-script docker >> /data/nodejs.log 2>&1'
    # extra_hosts:
    #   - "mongodb:127.0.0.1"
  front-end:
    build:
      context: ./front-end
      dockerfile: Dockerfile-react
    container_name: 'front-end'
    environment:
      - NODE_ENV=$NODE_ENV
    ports:
      - 3000:3000
      - 5000:5000
    volumes:
      - ./:/var/repo
      - ./temp/front-end:/data
